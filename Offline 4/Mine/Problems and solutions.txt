/****** Inside factor->ID LPAREN argument_list RPAREN ***********/

	 $$ = new SymbolInfo("", "factor");
            if($3->get_name() == ""){
                write_to_log("factor", "ID LPAREN RPAREN");
                //write_to_console("factor", "ID LPAREN RPAREN");
                $$->add_child({$1,$2,$4});
            }else{
                write_to_log("factor", "ID LPAREN argument_list RPAREN");
                //write_to_console("factor", "ID LPAREN argument_list RPAREN");
                $$->add_child({$1,$2,$3,$4});
            }

            $$->set_name(stringconcat({$1, $2, $3, $4}));
            $$->set_start_line($1->get_start_line());
            $$->set_end_line($4->get_end_line());

/****** Inside lexical analyzer ************/

"println" {
    log_file<<"Line# "<<total_line_count<<": Token <"<<upper(yytext)<<"> Lexeme "<<yytext<<" found\n";
    yylval.symbolInfo = new SymbolInfo(yytext, "PRINTLN",total_line_count);
    return PRINTLN;
}



/*********** inside term -> term MULOP unary_expression *************/

		else if($1->get_specifier() == "FLOAT" && $3->get_specifier() == "FLOAT"){
                    $$->set_specifier("FLOAT");
                }
